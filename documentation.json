{
    "pipes": [],
    "interfaces": [
        {
            "name": "GiftsGroup",
            "id": "interface-GiftsGroup-6f48df4e0f3e26feeac5d5a14d3a2d83ba5cf3d92df27346cc5a6531a45a18fe53b7b4fb658cd0b8da7cffa66fde2f153022295df4034096836ead5ceee10ef3",
            "file": "projects/jobx-ui/src/lib/models/gifts-group.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface GiftsGroup {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  tags: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponsiveConfig",
            "id": "interface-ResponsiveConfig-2c30d501a5317b10f1ad11e4901d875c07be0e97ba50265800eb398fe48f15e5d266581569779e6052e1259602595fea6fcbdbb5a0844830cb838d59eba0c2ed",
            "file": "projects/jobx-ui/src/lib/config/responsive.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InjectionToken } from '@angular/core';\r\n\r\nexport interface ResponsiveConfig {\r\n  tabletMin: number;\r\n  pcMin: number;\r\n  wideScreenMin: number;\r\n}\r\n\r\nexport const RESPONSIVE_CONFIG \r\n  = new InjectionToken<ResponsiveConfig>('responsive.config');\r\n\r\nexport const RESPONSIVE_CONFIG_DEFAULT: ResponsiveConfig = {\r\n  tabletMin: 768,\r\n  pcMin: 992,\r\n  wideScreenMin: 1200\r\n}\r\n",
            "properties": [
                {
                    "name": "pcMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "tabletMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "wideScreenMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ScreenService",
            "id": "injectable-ScreenService-883597a2b3c14d6d8edf9c72b7b730eeedc59f75416396df6d8a68b2904fa3c6b136e870e1f1c8d8da5da8db3e7f59e13e22fd8bae67a77b45c6fb6a8db2cf98",
            "file": "projects/jobx-ui/src/lib/services/screen.service.ts",
            "properties": [
                {
                    "name": "pcSmallMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "screenWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabletMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "wideScreenMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Service that tracks viewport width for responsive components. Designed\noriginally as an abstract component, but that pattern is broken in Storybook.</p>\n",
            "rawdescription": "\n\nService that tracks viewport width for responsive components. Designed\noriginally as an abstract component, but that pattern is broken in Storybook.\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\nimport { \n  ResponsiveConfig, RESPONSIVE_CONFIG \n} from '../config/responsive.config';\n\n/**\n * Service that tracks viewport width for responsive components. Designed\n * originally as an abstract component, but that pattern is broken in Storybook.\n */\n@Injectable({ providedIn: 'root' })\nexport class ScreenService {\n  public get isMobile() {\n    return this.screenWidth < this.tabletMin;\n  }\n  \n  public get isTablet() {\n    return this.screenWidth >= this.tabletMin\n      && this.screenWidth < this.pcSmallMin;\n  }\n\n  public get isPcSmall() {\n    return this.screenWidth >= this.pcSmallMin\n      && this.screenWidth < this.wideScreenMin;\n  }\n\n  public get isWideScreen() {\n    return this.screenWidth >= this.wideScreenMin;\n  };\n  \n  private tabletMin: number;\n  private pcSmallMin: number;\n  private wideScreenMin: number;\n  private screenWidth: number;\n  \n  constructor(\n    @Inject(RESPONSIVE_CONFIG) config: ResponsiveConfig\n  ) {\n    this.screenWidth = window.innerWidth;\n    this.tabletMin = config.tabletMin;\n    this.pcSmallMin = config.pcMin;\n    this.wideScreenMin = config.wideScreenMin;\n    window.onresize = () => { this.screenWidth = window.innerWidth };\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "ResponsiveConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "ResponsiveConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isMobile": {
                    "name": "isMobile",
                    "getSignature": {
                        "name": "isMobile",
                        "type": "",
                        "returnType": "",
                        "line": 12
                    }
                },
                "isTablet": {
                    "name": "isTablet",
                    "getSignature": {
                        "name": "isTablet",
                        "type": "",
                        "returnType": "",
                        "line": 16
                    }
                },
                "isPcSmall": {
                    "name": "isPcSmall",
                    "getSignature": {
                        "name": "isPcSmall",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                },
                "isWideScreen": {
                    "name": "isWideScreen",
                    "getSignature": {
                        "name": "isWideScreen",
                        "type": "",
                        "returnType": "",
                        "line": 26
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "ResponsiveComponent",
            "id": "directive-ResponsiveComponent-87c56d935359a3441bdd315565d50d413bc3e5dbfb80de89ffc3abf3b15a3ede4afd6e8f3d21fbc88380481e23e75fbc1af47eccdd22cacd06646b74743d6588",
            "file": "projects/jobx-ui/src/lib/components/responsive/responsive.component.ts",
            "type": "directive",
            "description": "<p>Abstract class that can be extended by all responsive components. This\npattern is broken in Storybook, so this class had to be refactored into\nan injectable dependency (ScreenService).</p>\n",
            "rawdescription": "\n\nAbstract class that can be extended by all responsive components. This\npattern is broken in Storybook, so this class had to be refactored into\nan injectable dependency (ScreenService).\n",
            "sourceCode": "import { Directive, HostListener, Inject } from '@angular/core';\nimport { \n  ResponsiveConfig,\n  RESPONSIVE_CONFIG\n} from '../../config/responsive.config';\n\n/**\n * Abstract class that can be extended by all responsive components. This \n * pattern is broken in Storybook, so this class had to be refactored into \n * an injectable dependency (ScreenService). \n */\n@Directive()\nexport abstract class ResponsiveComponent {\n  public get isMobile() {\n    return this.screenWidth < this.tabletMin;\n  }\n  \n  public get isTablet() {\n    return this.screenWidth >= this.tabletMin\n      && this.screenWidth < this.pcSmallMin;\n  }\n\n  public get isPcSmall() {\n    return this.screenWidth >= this.pcSmallMin\n      && this.screenWidth < this.wideScreenMin;\n  }\n\n  public get isWideScreen() {\n    return this.screenWidth >= this.wideScreenMin;\n  };\n  \n  private tabletMin: number;\n  private pcSmallMin: number;\n  private wideScreenMin: number;\n  private screenWidth: number;\n  \n  constructor(\n    @Inject(RESPONSIVE_CONFIG) config: ResponsiveConfig\n  ) {\n    this.screenWidth = window.innerWidth;\n    this.tabletMin = config.tabletMin;\n    this.pcSmallMin = config.pcMin;\n    this.wideScreenMin = config.wideScreenMin;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize() {\n    this.screenWidth = window.innerWidth;\n  }\n}\n",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47
                }
            ],
            "propertiesClass": [
                {
                    "name": "pcSmallMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "screenWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tabletMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "wideScreenMin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "config",
                        "type": "ResponsiveConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "config",
                        "type": "ResponsiveConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isMobile": {
                    "name": "isMobile",
                    "getSignature": {
                        "name": "isMobile",
                        "type": "",
                        "returnType": "",
                        "line": 14
                    }
                },
                "isTablet": {
                    "name": "isTablet",
                    "getSignature": {
                        "name": "isTablet",
                        "type": "",
                        "returnType": "",
                        "line": 18
                    }
                },
                "isPcSmall": {
                    "name": "isPcSmall",
                    "getSignature": {
                        "name": "isPcSmall",
                        "type": "",
                        "returnType": "",
                        "line": 23
                    }
                },
                "isWideScreen": {
                    "name": "isWideScreen",
                    "getSignature": {
                        "name": "isWideScreen",
                        "type": "",
                        "returnType": "",
                        "line": 28
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d7e0eec402e71f23aaf1d4f26c539c99402d1acea522263995fb2b279434f2ec759383f0bdd0da67a8615c6e6b073cdb24d03caf2c5ca388495c25ca59b3090b",
            "file": "projects/demo-app/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "giftsGroups",
                    "defaultValue": "groups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { groups } from 'sample-data';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public giftsGroups = groups;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<header>\r\n  <h1>Nuwe JOBarcelona '22 Hackathon</h1>\r\n  <h2>Desafío front-end</h2>\r\n  <p class=\"uk-text-lead\">\r\n    El equipo de front de JOBX está trabajando en una librería de componentes\r\n    para un proyecto que requiere que los usuarios puedan crear y personalizar\r\n    listas de regalos. El reto de la hackathon es crear un componente para\r\n    visualizar los distintos grupos de regalos en modo de scroll horizontal\r\n    (para PC) o de lista (para la versión de móvil y tablet). Esta es nuestra\r\n    solución:\r\n  </p>\r\n</header>\r\n\r\n<main>\r\n  <section class=\"uk-section\">\r\n    <jxui-gifts-group-list [groups]=\"giftsGroups\"></jxui-gifts-group-list>\r\n    <p class=\"uk-margin-large-top uk-text-center\">\r\n      Puedes encontrar más información sobre la solución <a>en el README de su\r\n      repositorio.</a>\r\n    </p>\r\n  </section>\r\n</main>\r\n"
        },
        {
            "name": "GiftsGroupCardComponent",
            "id": "component-GiftsGroupCardComponent-d03f81d56cc4dbdd86380c04a072e33e2ac09aee33cdbdd0d2ae3b809efb09ee2a82430fc8b3655f5f5c78db265c2a92f8a869db1a5490804e3039400b26feec",
            "file": "projects/jobx-ui/src/lib/components/gifts-group-card/gifts-group-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jxui-gifts-group-card[id][name][description][tags]",
            "styleUrls": [
                "./gifts-group-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gifts-group-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tags",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'jxui-gifts-group-card[id][name][description][tags]',\n  templateUrl: './gifts-group-card.component.html',\n  styleUrls: ['./gifts-group-card.component.scss']\n})\nexport class GiftsGroupCardComponent {\n  @Input() id!: number;\n  @Input() name!: string;\n  @Input() description!: string;\n  @Input() tags!: string[];\n  @Output() selected = new EventEmitter<boolean>();\n\n  public select(): void {\n    this.selected.emit(true);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".gifts-group-card {\r\n  width: 400px;\r\n  height: 100%;\r\n}\r\n",
                    "styleUrl": "./gifts-group-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div  class=\"uk-card uk-card-default uk-card-hover \r\n    gifts-group-card uk-flex uk-flex-column uk-flex-between\">\r\n  <div class=\"uk-card-body\">\r\n    <h4 class=\"uk-card-title\">{{ name }}</h4>\r\n    <p>{{ description }}</p>\r\n    <div>\r\n      <span *ngFor=\"let tag of tags\" class=\"uk-badge uk-margin-small-right\">\r\n        {{ tag }}\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"uk-card-footer\">\r\n    <button \r\n      class=\"uk-button uk-button-text uk-button-small uk-float-right\"\r\n      (click)=\"select()\">\r\n      Ver más\r\n    </button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "GiftsGroupListComponent",
            "id": "component-GiftsGroupListComponent-1a85e4155daa8de4dad92089b6b9b4a964739dd300469287d58baf4c08310239f7fb825e5596f6ef821f5d5973f115e8ad2792883f90bcf5cf67b06780566d96",
            "file": "projects/jobx-ui/src/lib/components/gifts-group-list/gifts-group-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jxui-gifts-group-list[groups]",
            "styleUrls": [
                "./gifts-group-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gifts-group-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "groups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "GiftsGroup[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "group",
                            "type": "GiftsGroup",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "group",
                            "type": "GiftsGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { GiftsGroup } from '../../models/gifts-group';\nimport { ScreenService } from '../../services/screen.service';\n\n@Component({\n  selector: 'jxui-gifts-group-list[groups]',\n  templateUrl: './gifts-group-list.component.html',\n  styleUrls: ['./gifts-group-list.component.scss']\n})\nexport class GiftsGroupListComponent {\n  @Input() groups!: GiftsGroup[];\n\n  public get isMobile() { return this.screen.isMobile; }\n  public get isTablet() { return this.screen.isTablet; }\n\n  constructor(private screen: ScreenService) {}\n  \n  public select(group: GiftsGroup): void {\n    alert('Selected group: ' + group.name);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "ul {\r\n  --scrollbarBG: #e5e5e5;\r\n  --thumbBG: #bbbbbb;\r\n}\r\n\r\nul::-webkit-scrollbar {\r\n  width: 11px;\r\n}\r\n\r\nul.scrollbar-wide::-webkit-scrollbar {\r\n  width: 16px;\r\n}\r\n\r\nul {\r\n  scrollbar-width: thin;\r\n  scrollbar-color: var(--thumbBG) var(--scrollbarBG);\r\n}\r\n\r\nul.scrollbar-wide {\r\n  scrollbar-width: auto;\r\n}\r\n\r\nul::-webkit-scrollbar-track {\r\n  background: var(--scrollbarBG);\r\n}\r\n\r\nul::-webkit-scrollbar-thumb {\r\n  background-color: var(--thumbBG) ;\r\n  border-radius: 6px;\r\n  border: 3px solid var(--scrollbarBG);\r\n}\r\n",
                    "styleUrl": "./gifts-group-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "screen",
                        "type": "ScreenService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "screen",
                        "type": "ScreenService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isMobile": {
                    "name": "isMobile",
                    "getSignature": {
                        "name": "isMobile",
                        "type": "",
                        "returnType": "",
                        "line": 13
                    }
                },
                "isTablet": {
                    "name": "isTablet",
                    "getSignature": {
                        "name": "isTablet",
                        "type": "",
                        "returnType": "",
                        "line": 14
                    }
                }
            },
            "templateData": "<h2 class=\"uk-text-center@s uk-heading-line\"><span>Grupos de regalos</span></h2>\n\n<div *ngIf=\"isMobile || isTablet; then list else horizontalScroll\"></div>\n\n<ng-template #horizontalScroll>\n  <jxui-slider>\n    <li *ngFor=\"let group of groups\">\n      <jxui-gifts-group-card (selected)=\"select(group)\"\n        [id]=\"group.id\"\n        [name]=\"group.name\"\n        [description]=\"group.description\"\n        [tags]=\"group.tags\">\n      </jxui-gifts-group-card>\n    </li>\n  </jxui-slider>\n</ng-template>\n\n<ng-template #list>\n  <ul \n    class=\"uk-list uk-list-striped uk-overflow-auto\"\n    [ngClass]=\"{\n      'uk-list-large uk-height-max-large scrollbar-wide': isTablet,\n      'uk-height-max-medium': isMobile\n    }\"\n  >\n    <li *ngFor=\"let group of groups\" class=\"uk-text-center\">\n      <button class=\"uk-button uk-button-text\" (click)=\"select(group)\">\n        {{ group.name }}\n      </button>\n    </li>\n  </ul>\n</ng-template>\n"
        },
        {
            "name": "SliderComponent",
            "id": "component-SliderComponent-e8ec084dc84c2f4f65193fc750945d2a3d333663c1a4057d28c788a2b6519dab2df0c7167b751af624d753ea136b24aa50a9bbce114323ee26c05d8c9f01373f",
            "file": "projects/jobx-ui/src/lib/components/slider/slider.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "jxui-slider",
            "styleUrls": [
                "./slider.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'jxui-slider',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.scss']\n})\nexport class SliderComponent { }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./slider.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div uk-slider=\"center: true\" class=\"uk-visible-toggle\">\n  <div class=\"uk-position-relative\">\n    <div class=\"uk-slider-container\">\n      <ul \n        class=\"uk-slider-items uk-grid uk-grid-large uk-padding\" \n        uk-height-match>\n        <ng-content></ng-content>\n      </ul>\n    </div>\n\n    <div class=\"uk-hidden@s uk-light\">\n      <a \n        href=\"#\"\n        class=\"uk-position-center-left uk-position-small\"\n        uk-slidenav-previous \n        uk-slider-item=\"previous\">\n      </a>\n      <a\n        href=\"#\"\n        class=\"uk-position-center-right uk-position-small\"\n        uk-slidenav-next \n        uk-slider-item=\"next\">\n      </a>\n    </div>\n\n    <div class=\"uk-visible@s\">\n      <a\n        href=\"#\" \n        class=\"uk-position-center-left-out uk-position-small\"\n        uk-slidenav-previous\n        uk-slider-item=\"previous\">\n      </a>\n      <a\n        href=\"#\"\n        class=\"uk-position-center-right-out uk-position-small\"\n        uk-slidenav-next\n        uk-slider-item=\"next\">\n      </a>\n    </div>\n  </div>\n\n  <ul class=\"uk-slider-nav uk-dotnav uk-flex-center uk-margin\"></ul>\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a525b7723c3025c3fb9a2c6d595def942d04648e469e140b8b1aed2344d2019d5ac508c836e004abb91ae220c0eccf5736949e720571ab95368364b725f900ca",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/demo-app/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { JobxUiModule } from 'jobx-ui';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    JobxUiModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "JobxUiModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "JobxUiModule",
            "id": "module-JobxUiModule-ac33baf492f4c769c21b14e07187ab97010a204ef898cec3f3aebda57ee6ed8f8e0b80a7dfa8506961d4284a931bdb0ab264cf62d806398525d62c8c53bbd736",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/jobx-ui/src/lib/jobx-ui.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { \n  RESPONSIVE_CONFIG,\n  RESPONSIVE_CONFIG_DEFAULT\n} from './config/responsive.config';\nimport { ScreenService } from './services/screen.service';\nimport { \n  GiftsGroupCardComponent\n} from './components/gifts-group-card/gifts-group-card.component';\nimport { \n  GiftsGroupListComponent\n} from './components/gifts-group-list/gifts-group-list.component';\nimport { SliderComponent } from './components/slider/slider.component';\n\n@NgModule({\n  declarations: [\n    GiftsGroupCardComponent,\n    GiftsGroupListComponent,\n    SliderComponent\n  ],\n  providers: [\n    { provide: RESPONSIVE_CONFIG, useValue: RESPONSIVE_CONFIG_DEFAULT },\n    ScreenService\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    GiftsGroupListComponent\n  ]\n})\nexport class JobxUiModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ScreenService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GiftsGroupCardComponent"
                        },
                        {
                            "name": "GiftsGroupListComponent"
                        },
                        {
                            "name": "SliderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GiftsGroupListComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo-app/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/jobx-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo-app/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo-app/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "groups",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "sample-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "GiftsGroup[]",
                "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    name: 'Compis de piso',\r\n    description: 'Lista de regalos para los compis de piso',\r\n    tags: ['Deportes de riesgo', 'Libros']\r\n  }, {\r\n    id: 2,\r\n    name: 'Familia',\r\n    description: `Lista de regalos para la famila. Haremos esta descripción \r\n      algo más larga para comprobar que los elementos del scroll horizontal \r\n      mantienen el mismo tamaño aunque difieran en contenido.`,\r\n    tags: ['Familia', 'Deportes']\r\n  }, {\r\n    id: 3,\r\n    name: 'Colegas del trabajo',\r\n    description: 'Lista de regalos para los colegas del trabajo',\r\n    tags: ['Administración', 'Mindfulness']\r\n  }, {\r\n    id: 4,\r\n    name: 'Amigos',\r\n    description: 'Lista de regalos para los amigos',\r\n    tags: ['Deportes', 'Comida']\r\n  }, {\r\n    id: 5,\r\n    name: 'Estudiantes',\r\n    description: 'Lista de regalos para estudiantes',\r\n    tags: ['Libros', 'Revistas']\r\n  }, {\r\n    id: 6,\r\n    name: 'Profesores',\r\n    description: 'Lista de regalos para profesores',\r\n    tags: ['Libros', 'Comida']\r\n  }, {\r\n    id: 7,\r\n    name: 'Músicos',\r\n    description: 'Lista de regalos para músicos',\r\n    tags: ['Instrumentos', 'Entradas conciertos']\r\n  }, {\r\n    id: 8,\r\n    name: 'Niños',\r\n    description: 'Lista de regalos para niños',\r\n    tags: ['Juguetes', 'Revistas']\r\n  }, {\r\n    id: 9,\r\n    name: 'Abuelos',\r\n    description: 'Lista de regalos para abuelos',\r\n    tags: ['Comida', 'Ropa']\r\n  }\r\n]"
            },
            {
                "name": "MobileView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/gifts-group-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/demo-app/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/jobx-ui/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "RESPONSIVE_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/jobx-ui/src/lib/config/responsive.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken<ResponsiveConfig>('responsive.config')"
            },
            {
                "name": "RESPONSIVE_CONFIG_DEFAULT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/jobx-ui/src/lib/config/responsive.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ResponsiveConfig",
                "defaultValue": "{\r\n  tabletMin: 768,\r\n  pcMin: 992,\r\n  wideScreenMin: 1200\r\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/gifts-group-list.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<GiftsGroupListComponent>",
                "defaultValue": "(args: GiftsGroupListComponent) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "projects/demo-app/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo-app/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo-app/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/jobx-ui/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/jobx-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/jobx-ui/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/demo-app/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo-app/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/demo-app/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/demo-app/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "sample-data.ts": [
                {
                    "name": "groups",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "sample-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GiftsGroup[]",
                    "defaultValue": "[\r\n  {\r\n    id: 1,\r\n    name: 'Compis de piso',\r\n    description: 'Lista de regalos para los compis de piso',\r\n    tags: ['Deportes de riesgo', 'Libros']\r\n  }, {\r\n    id: 2,\r\n    name: 'Familia',\r\n    description: `Lista de regalos para la famila. Haremos esta descripción \r\n      algo más larga para comprobar que los elementos del scroll horizontal \r\n      mantienen el mismo tamaño aunque difieran en contenido.`,\r\n    tags: ['Familia', 'Deportes']\r\n  }, {\r\n    id: 3,\r\n    name: 'Colegas del trabajo',\r\n    description: 'Lista de regalos para los colegas del trabajo',\r\n    tags: ['Administración', 'Mindfulness']\r\n  }, {\r\n    id: 4,\r\n    name: 'Amigos',\r\n    description: 'Lista de regalos para los amigos',\r\n    tags: ['Deportes', 'Comida']\r\n  }, {\r\n    id: 5,\r\n    name: 'Estudiantes',\r\n    description: 'Lista de regalos para estudiantes',\r\n    tags: ['Libros', 'Revistas']\r\n  }, {\r\n    id: 6,\r\n    name: 'Profesores',\r\n    description: 'Lista de regalos para profesores',\r\n    tags: ['Libros', 'Comida']\r\n  }, {\r\n    id: 7,\r\n    name: 'Músicos',\r\n    description: 'Lista de regalos para músicos',\r\n    tags: ['Instrumentos', 'Entradas conciertos']\r\n  }, {\r\n    id: 8,\r\n    name: 'Niños',\r\n    description: 'Lista de regalos para niños',\r\n    tags: ['Juguetes', 'Revistas']\r\n  }, {\r\n    id: 9,\r\n    name: 'Abuelos',\r\n    description: 'Lista de regalos para abuelos',\r\n    tags: ['Comida', 'Ropa']\r\n  }\r\n]"
                }
            ],
            "stories/gifts-group-list.stories.ts": [
                {
                    "name": "MobileView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/gifts-group-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/gifts-group-list.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<GiftsGroupListComponent>",
                    "defaultValue": "(args: GiftsGroupListComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/jobx-ui/src/lib/config/responsive.config.ts": [
                {
                    "name": "RESPONSIVE_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/jobx-ui/src/lib/config/responsive.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken<ResponsiveConfig>('responsive.config')"
                },
                {
                    "name": "RESPONSIVE_CONFIG_DEFAULT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/jobx-ui/src/lib/config/responsive.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponsiveConfig",
                    "defaultValue": "{\r\n  tabletMin: 768,\r\n  pcMin: 992,\r\n  wideScreenMin: 1200\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "projects/demo-app/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/demo-app/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo-app/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo-app/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/demo-app/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/lib/components/gifts-group-card/gifts-group-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GiftsGroupCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/lib/components/gifts-group-list/gifts-group-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GiftsGroupListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/lib/components/responsive/responsive.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ResponsiveComponent",
                "coveragePercent": 12,
                "coverageCount": "1/8",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/lib/components/slider/slider.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/lib/config/responsive.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsiveConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/lib/config/responsive.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RESPONSIVE_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/lib/config/responsive.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RESPONSIVE_CONFIG_DEFAULT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/lib/models/gifts-group.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GiftsGroup",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/lib/services/screen.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ScreenService",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/jobx-ui/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "sample-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "groups",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/gifts-group-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MobileView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/gifts-group-list.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}